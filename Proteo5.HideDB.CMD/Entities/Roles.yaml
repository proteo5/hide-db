# Description: This file defines the Roles entity for the Proteo5.HideDB.CMD project.
entity: "Roles"
entityversion: "1"
version: "1.0"
description: "Entity for system role management"

fields:
  - name: "Id"
    type: "int"
    primaryKey: true
    autoIncrement: true
    required: true
    nullable: false
    description: "Unique role identifier"
  - name: "Name"
    type: "string"
    maxLength: 50
    required: true
    nullable: false
    description: "Role name"
  - name: "Description"
    type: "string"
    maxLength: 255
    required: false
    nullable: true
    description: "Role description"
  - name: "Status"
    type: "string"
    maxLength: 20
    defaultValue: "active"
    catalog: "statuses"
    required: true
    nullable: false
    description: "Role status"
  - name: "CreatedAt"
    type: "DateTime"
    defaultValue: "CURRENT_TIMESTAMP_UTC"
    required: true
    nullable: false
    description: "Creation date"
  - name: "UpdatedAt"
    type: "DateTime"
    defaultValue: "CURRENT_TIMESTAMP_UTC"
    required: true
    nullable: false
    description: "Last update date"

catalogs:
  statuses:
    - name: "active"
      description: "Active role"
    - name: "inactive"
      description: "Inactive role"
    - name: "pending"
      description: "Pending approval"
    - name: "archived"
      description: "Archived role"

statements:
  - name: "Insert"
    type: "Insert"
    return: "nothing"
    description: "Create a new role"
    sql: |
      INSERT INTO Roles (Name, Description, Status)
      VALUES (@Name, @Description, @Status);
  - name: "Update"
    type: "Update"
    return: "nothing"
    description: "Update an existing role"
    sql: |
      UPDATE Roles 
      SET Name = @Name,
          Description = @Description,
          Status = @Status,
          UpdatedAt = GETUTCDATE()
      WHERE Id = @Id;
  - name: "DeleteById"
    type: "Delete"
    return: "nothing"
    description: "Delete a role by ID"
    sql: |
      DELETE FROM Roles 
      WHERE Id = @Id;
  - name: "GetAll"
    type: "Select"
    return: "many"
    description: "Get all roles ordered by name"
    sql: |
      SELECT Id, Name, Description, Status, CreatedAt, UpdatedAt
      FROM Roles
      ORDER BY Name ASC;
  - name: "GetById"
    type: "Select"
    return: "one"
    description: "Get a role by ID"
    sql: |
      SELECT Id, Name, Description, Status, CreatedAt, UpdatedAt
      FROM Roles
      WHERE Id = @Id;
  - name: "GetByName"
    type: "Select"
    return: "one"
    description: "Get a role by name"
    sql: |
      SELECT Id, Name, Description, Status, CreatedAt, UpdatedAt
      FROM Roles
      WHERE Name = @Name;
  - name: "GetByStatus"
    type: "Select"
    return: "many"
    description: "Get all roles by status"
    sql: |
      SELECT Id, Name, Description, Status, CreatedAt, UpdatedAt
      FROM Roles
      WHERE Status = @Status
      ORDER BY Name ASC;
  - name: "GetActive"
    type: "Select"
    return: "many"
    description: "Get all active roles"
    sql: |
      SELECT Id, Name, Description, Status, CreatedAt, UpdatedAt
      FROM Roles
      WHERE Status = 'active'
      ORDER BY Name ASC;
  - name: "GetActiveCount"
    type: "Select"
    return: "scalar"
    description: "Get count of active roles"
    sql: |
      SELECT COUNT(*)
      FROM Roles
      WHERE Status = 'active';
  - name: "SetStatus"
    type: "Update"
    return: "nothing"
    description: "Update role status"
    sql: |
      UPDATE Roles 
      SET Status = @Status,
          UpdatedAt = GETUTCDATE()
      WHERE Id = @Id;
  - name: "ActivateRole"
    type: "Update"
    return: "nothing"
    description: "Activate a role"
    sql: |
      UPDATE Roles 
      SET Status = 'active',
          UpdatedAt = GETUTCDATE()
      WHERE Id = @Id;
  - name: "DeactivateRole"
    type: "Update"
    return: "nothing"
    description: "Deactivate a role"
    sql: |
      UPDATE Roles 
      SET Status = 'inactive',
          UpdatedAt = GETUTCDATE()
      WHERE Id = @Id;
  - name: "ArchiveRole"
    type: "Update"
    return: "nothing"
    description: "Archive a role"
    sql: |
      UPDATE Roles 
      SET Status = 'archived',
          UpdatedAt = GETUTCDATE()
      WHERE Id = @Id;